// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycle.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PlanningScreen")]
    public partial class PlanningScreenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PlanningScreen.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PlanningScreen", "    Meal Peridos functionalities and validations", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save button is clicked without any changes applied")]
        [NUnit.Framework.CategoryAttribute("TC29023")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void SaveButtonIsClickedWithoutAnyChangesApplied(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29023"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save button is clicked without any changes applied", null, @__tags);
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
        testRunner.And("Save button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
    testRunner.Then("Verify the user stays on the planning page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save all updated figures (fields)")]
        [NUnit.Framework.CategoryAttribute("TC29022")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void SaveAllUpdatedFiguresFields(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29022"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save all updated figures (fields)", null, @__tags);
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 21
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
        testRunner.And(string.Format("Number of covers for meal period \"{0}\" is set to random number", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "SellPrice"});
            table58.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        "RECIPE",
                        string.Format("{0}", recipeName),
                        "0#99"});
#line 26
        testRunner.And("data for recipes is set", ((string)(null)), table58, "And ");
#line 29
        testRunner.And(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
        testRunner.And(string.Format("Price model for recipe \"{0}\" in meal period \"{1}\" is set to \"Fixed\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
        testRunner.And(string.Format("SellPrice for recipe named \"{0}\" in meal period \"{1}\" is set to \"2\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
        testRunner.And("Save button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
    testRunner.Then("Verify notification message \"Planning figures updated.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
        testRunner.And(string.Format("Verify quantity for recipe named \"{0}\" in meal period \"{1}\" is equal to the previ" +
                        "ous inputted number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
    testRunner.And("Verify the user stays on the planning page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Saved data is retrieved from the API")]
        [NUnit.Framework.CategoryAttribute("TC29024")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", "1#99", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void SavedDataIsRetrievedFromTheAPI(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string plannedQty, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29024"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Saved data is retrieved from the API", null, @__tags);
#line 43
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 44
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriodName",
                        "recipeTitle",
                        "PlannedQuantity"});
            table59.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        string.Format("{0}", recipeName),
                        "1#99"});
#line 49
    testRunner.When("data for recipes is set", ((string)(null)), table59, "When ");
#line 52
        testRunner.And(string.Format("Price model for recipe \"{0}\" in meal period \"{1}\" is set to \"Fixed\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
        testRunner.And(string.Format("SellPrice for recipe named \"{0}\" in meal period \"{1}\" is set to \"2\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
        testRunner.And("Save button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
        testRunner.And("Verify notification message \"Planning figures updated.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
        testRunner.And("Cancel button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
        testRunner.And("Wait for Calendar view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriodName",
                        "type",
                        "recipeTitle",
                        "PlannedQty"});
            table60.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        "RECIPE",
                        string.Format("{0}", recipeName),
                        string.Format("{0}", plannedQty)});
#line 59
    testRunner.Then("Verify data for items is", ((string)(null)), table60, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully Update and Save number of covers")]
        [NUnit.Framework.CategoryAttribute("TC29019")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void SuccessfullyUpdateAndSaveNumberOfCovers(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29019"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully Update and Save number of covers", null, @__tags);
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 71
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
    testRunner.When(string.Format("Number of covers for meal period \"{0}\" is set to random number", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
        testRunner.And(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
        testRunner.And(string.Format("Price model for recipe \"{0}\" in meal period \"{1}\" is set to \"Fixed\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
        testRunner.And(string.Format("SellPrice for recipe named \"{0}\" in meal period \"{1}\" is set to \"2\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
        testRunner.And("Save button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
        testRunner.And("Verify notification message \"Planning figures updated.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
        testRunner.And("Calendar tab is clicked and calendar view has loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
    testRunner.Then(string.Format("Verify number of covers for meal period \"{0}\" is equal to the previous inputted n" +
                        "umber", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Open Monday planning screen, then go to Tuesday, back to Monday update total quan" +
            "tity and click Save")]
        [NUnit.Framework.CategoryAttribute("TC29080")]
        [NUnit.Framework.CategoryAttribute("D23144")]
        [NUnit.Framework.CategoryAttribute("D24051")]
        [NUnit.Framework.CategoryAttribute("D24410")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "724Gourmet Beef Burger 6oz", "724Gourmet Chicken Burger", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void OpenMondayPlanningScreenThenGoToTuesdayBackToMondayUpdateTotalQuantityAndClickSave(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string item1, string item2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29080",
                    "D23144",
                    "D24051",
                    "D24410"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open Monday planning screen, then go to Tuesday, back to Monday update total quan" +
                    "tity and click Save", null, @__tags);
#line 91
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 92
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
        testRunner.And("planning for \"Monday\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
        testRunner.And("Cancel button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
        testRunner.And("planning for \"Tuesday\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
        testRunner.And(string.Format("Meal Period \"{0}\" is expanded", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle"});
            table61.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        "RECIPE",
                        string.Format("{0}", item1)});
            table61.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        "RECIPE",
                        string.Format("{0}", item2)});
#line 99
        testRunner.And(string.Format("Verify items for meal period \"{0}\" are (check count \"yes\")", mealPeriod), ((string)(null)), table61, "And ");
#line 103
        testRunner.And("Cancel button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
    testRunner.When("planning for \"Monday\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
        testRunner.And(string.Format("meal periods for the day are \"{0}\"", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
        testRunner.And(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
        testRunner.And(string.Format("Price model for recipe \"{0}\" in meal period \"{1}\" is set to \"Fixed\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
        testRunner.And(string.Format("SellPrice for recipe named \"{0}\" in meal period \"{1}\" is set to \"2\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
        testRunner.And("Save button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
    testRunner.Then("Verify notification message \"Planning figures updated.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 111
        testRunner.And(string.Format("Verify quantity for recipe named \"{0}\" in meal period \"{1}\" is equal to the previ" +
                        "ous inputted number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modal dialog for unsaved changes is shown on cancel")]
        [NUnit.Framework.CategoryAttribute("TC29521")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ModalDialogForUnsavedChangesIsShownOnCancel(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29521"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modal dialog for unsaved changes is shown on cancel", null, @__tags);
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 120
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 121
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
        testRunner.And(string.Format("values for recipe \"{0}\" in meal period \"{1}\" are stored", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
        testRunner.And(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
        testRunner.And("Cancel button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
        testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
        testRunner.And("Wait for Calendar view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
    testRunner.Then(string.Format("Verify values for recipe \"{0}\" in meal period \"{1}\" are equal to the stored ones", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modal dialog for unsaved changes is shown on pressing calendar button")]
        [NUnit.Framework.CategoryAttribute("TC29521")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ModalDialogForUnsavedChangesIsShownOnPressingCalendarButton(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29521"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modal dialog for unsaved changes is shown on pressing calendar button", null, @__tags);
#line 138
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 139
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 140
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
        testRunner.And(string.Format("values for recipe \"{0}\" in meal period \"{1}\" are stored", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
        testRunner.And(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
        testRunner.And("Calendar tab is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
        testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
        testRunner.And("Wait for Calendar view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
    testRunner.Then(string.Format("Verify values for recipe \"{0}\" in meal period \"{1}\" are equal to the stored ones", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modal dialog for unsaved changes is shown when going to nutrition")]
        [NUnit.Framework.CategoryAttribute("TC29526")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ModalDialogForUnsavedChangesIsShownWhenGoingToNutrition(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29526"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modal dialog for unsaved changes is shown when going to nutrition", null, @__tags);
#line 157
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 158
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 159
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
        testRunner.And(string.Format("values for recipe \"{0}\" in meal period \"{1}\" are stored", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
        testRunner.And(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
        testRunner.And("daily nutrition tab is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
        testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
    testRunner.When("planning tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 167
    testRunner.Then(string.Format("Verify values for recipe \"{0}\" in meal period \"{1}\" are equal to the stored ones", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modal dialog for unsaved changes is shown when going to weekly planning view")]
        [NUnit.Framework.CategoryAttribute("TC29521")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ModalDialogForUnsavedChangesIsShownWhenGoingToWeeklyPlanningView(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29521"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modal dialog for unsaved changes is shown when going to weekly planning view", null, @__tags);
#line 175
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 176
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 177
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
        testRunner.And(string.Format("values for recipe \"{0}\" in meal period \"{1}\" are stored", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
        testRunner.And(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
        testRunner.And("weekly Planning view link is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
        testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
    testRunner.When("Days tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
    testRunner.Then(string.Format("Verify values for recipe \"{0}\" in meal period \"{1}\" are equal to the stored ones", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Number of covers is saved after closing the app")]
        [NUnit.Framework.CategoryAttribute("TC29558")]
        [NUnit.Framework.CategoryAttribute("D23865")]
        [NUnit.Framework.TestCaseAttribute("QAI", "true", "Meda", "LUNCH", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void NumberOfCoversIsSavedAfterClosingTheApp(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29558",
                    "D23865"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Number of covers is saved after closing the app", null, @__tags);
#line 193
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 194
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 195
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
        testRunner.And(string.Format("Number of covers for meal period \"{0}\" is set to random number", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
        testRunner.And("Save button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
        testRunner.And("Verify notification message \"Planning figures updated.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
        testRunner.And("Menu Cycles app is closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
        testRunner.And(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 206
    testRunner.Then(string.Format("Verify number of covers for meal period \"{0}\" is equal to the previous inputted n" +
                        "umber", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calculate Daily Totals")]
        [NUnit.Framework.CategoryAttribute("TC29753")]
        [NUnit.Framework.CategoryAttribute("D26939")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "TUESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void CalculateDailyTotals(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29753",
                    "D26939"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calculate Daily Totals", null, @__tags);
#line 214
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 215
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 216
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 219
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "PlannedQuantity",
                        "PriceModel",
                        "TaxPercentage",
                        "SellPrice"});
            table62.AddRow(new string[] {
                        "LUNCH",
                        "RECIPE",
                        "724Gourmet Beef Burger 6oz",
                        "3",
                        "Fixed",
                        "0",
                        "3"});
            table62.AddRow(new string[] {
                        "LUNCH",
                        "RECIPE",
                        "724Gourmet Chicken Burger",
                        "7",
                        "Fixed",
                        "0",
                        "8"});
            table62.AddRow(new string[] {
                        "DINNER",
                        "RECIPE",
                        "703Houmus Sandwich Filling (50g)",
                        "5",
                        "Fixed",
                        "0",
                        "8"});
#line 220
    testRunner.And("data for recipes is set", ((string)(null)), table62, "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "PlannedQuantity",
                        "PriceModel",
                        "TaxPercentage",
                        "SellPrice"});
            table63.AddRow(new string[] {
                        "DANGELO",
                        "BUFFET",
                        "Maya Buffet",
                        "10",
                        "Fixed",
                        "20",
                        "23"});
            table63.AddRow(new string[] {
                        "DANGELO",
                        "BUFFET",
                        "Aneliya Buffet",
                        "1",
                        "Fixed",
                        "5",
                        "20"});
#line 225
    testRunner.And("data for buffets is set", ((string)(null)), table63, "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "RecipeTitle",
                        "PlannedQuantity"});
            table64.AddRow(new string[] {
                        "004Fish Stock (bouillon)",
                        "10"});
            table64.AddRow(new string[] {
                        "004Basic Sponge",
                        "20"});
            table64.AddRow(new string[] {
                        "004Fresh Lemon Curd",
                        "30"});
            table64.AddRow(new string[] {
                        "004Beef Stock (bouillon)",
                        "7"});
#line 229
    testRunner.And("data for recipes in buffet \"Maya Buffet\" in meal period \"DANGELO\" is set", ((string)(null)), table64, "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "RecipeTitle",
                        "PlannedQuantity"});
            table65.AddRow(new string[] {
                        "004Bechamel Sauce",
                        "2"});
            table65.AddRow(new string[] {
                        "004Beef Stock (bouillon)",
                        "3"});
            table65.AddRow(new string[] {
                        "004Tartare Sauce (bulk)",
                        "4"});
            table65.AddRow(new string[] {
                        "004Fresh Lemon Curd",
                        "5"});
            table65.AddRow(new string[] {
                        "004Blueberry Muffin (Wrapped)",
                        "6"});
            table65.AddRow(new string[] {
                        "004Baked Beans_1",
                        "7"});
#line 235
    testRunner.And("data for recipes in buffet \"Aneliya Buffet\" in meal period \"DANGELO\" is set", ((string)(null)), table65, "And ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlannedQty",
                        "TotalCost",
                        "Revenue",
                        "ActualGP"});
            table66.AddRow(new string[] {
                        "109",
                        "323.19",
                        "315.71",
                        "-2%"});
#line 243
    testRunner.Then("Verify Daily Totals are equal to", ((string)(null)), table66, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No planning data available message")]
        [NUnit.Framework.CategoryAttribute("TC29844")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Testing Copying Meal Periods", "TUESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void NoPlanningDataAvailableMessage(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29844"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No planning data available message", null, @__tags);
#line 253
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 254
testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 255
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 258
    testRunner.Then("Verify \"No planning data available. Please add a meal period.\" message is display" +
                    "ed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 259
        testRunner.And("Verify save button is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Error message is displayed when changes are made and Update Price button is click" +
            "ed")]
        [NUnit.Framework.CategoryAttribute("TC29845")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "DANGELO", "004Baked Beans_3", "FRIDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ErrorMessageIsDisplayedWhenChangesAreMadeAndUpdatePriceButtonIsClicked(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29845"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Error message is displayed when changes are made and Update Price button is click" +
                    "ed", null, @__tags);
#line 267
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 268
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 269
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
    testRunner.When(string.Format("quantity for recipe named \"{0}\" in meal period \"{1}\" is set to random number", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 273
        testRunner.And(string.Format("Update prices button is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
    testRunner.Then("Verify notification message \"You have some unsaved changes. Please save them befo" +
                    "re continuing.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No modal dialog is shown if there are no changes and Cancel button is clicked")]
        [NUnit.Framework.CategoryAttribute("TC29885")]
        [NUnit.Framework.CategoryAttribute("D24506")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void NoModalDialogIsShownIfThereAreNoChangesAndCancelButtonIsClicked(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29885",
                    "D24506"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No modal dialog is shown if there are no changes and Cancel button is clicked", null, @__tags);
#line 282
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 283
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 284
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
    testRunner.When("Cancel button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 288
        testRunner.And("Wait for Calendar view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
    testRunner.Then("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Notification is shown when user is trying to save planning with the same price ty" +
            "pe selected several times")]
        [NUnit.Framework.CategoryAttribute("TC29874")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void NotificationIsShownWhenUserIsTryingToSavePlanningWithTheSamePriceTypeSelectedSeveralTimes(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29874"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Notification is shown when user is trying to save planning with the same price ty" +
                    "pe selected several times", null, @__tags);
#line 297
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 298
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 299
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
    testRunner.When(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 303
        testRunner.And(string.Format("TariffType is set to \"TariffOne\" for recipe \"{0}\" with current TariffType \"Tariff" +
                        "Two\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
        testRunner.And("Save button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
    testRunner.Then("Verify notification message \"Please make sure that you have not selected the same" +
                    " price type several times for the same item\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Notification is shown when user has selected all available price types")]
        [NUnit.Framework.CategoryAttribute("TC29875")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "LUNCH", "004Baked Beans_3", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void NotificationIsShownWhenUserHasSelectedAllAvailablePriceTypes(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29875"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Notification is shown when user has selected all available price types", null, @__tags);
#line 313
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 314
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 315
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
    testRunner.When(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 319
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
        testRunner.And(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
    testRunner.Then("Verify notification message \"There are 14 price types available. You cannot add m" +
                    "ore.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modal dialog is closed on cancel when only PriceModel is changed for an unsaved r" +
            "ecipe")]
        [NUnit.Framework.CategoryAttribute("TC30010")]
        [NUnit.Framework.CategoryAttribute("D24750")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "DANGELO", "004Bechamel Sauce", "FRIDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ModalDialogIsClosedOnCancelWhenOnlyPriceModelIsChangedForAnUnsavedRecipe(string environment, string withFA, string menuCycle, string mealPeriod, string recipeName, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC30010",
                    "D24750"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modal dialog is closed on cancel when only PriceModel is changed for an unsaved r" +
                    "ecipe", null, @__tags);
#line 340
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 341
        testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 342
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
            testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "RecipeTitle",
                        "PriceModel"});
            table67.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        string.Format("{0}", recipeName),
                        "GP"});
#line 345
        testRunner.When("data for recipes is set", ((string)(null)), table67, "When ");
#line 348
        testRunner.When("Cancel button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 349
            testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
            testRunner.And("Wait for Calendar view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
        testRunner.Then("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User should not be redirected to the planning screen after navigating to Nutritio" +
            "n view and back")]
        [NUnit.Framework.CategoryAttribute("TC30592")]
        [NUnit.Framework.CategoryAttribute("D25310")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void UserShouldNotBeRedirectedToThePlanningScreenAfterNavigatingToNutritionViewAndBack(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC30592",
                    "D25310"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User should not be redirected to the planning screen after navigating to Nutritio" +
                    "n view and back", null, @__tags);
#line 359
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 360
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 361
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 363
            testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 364
    testRunner.When("nutrition tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 365
        testRunner.And("planning tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
        testRunner.And("Calendar tab is clicked and calendar view has loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
        testRunner.And("Home button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
    testRunner.Then("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Select calendar button on planning screen without any changes")]
        [NUnit.Framework.CategoryAttribute("TC27677")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Meda", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void SelectCalendarButtonOnPlanningScreenWithoutAnyChanges(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC27677",
                    "Smoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Select calendar button on planning screen without any changes", null, @__tags);
#line 378
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 379
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 380
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
    testRunner.When("Calendar tab is clicked and calendar view has loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 384
    testRunner.Then("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify save button is disabled if menu cycle is published")]
        [NUnit.Framework.CategoryAttribute("TC31037")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Local User Testing", "WEDNESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void VerifySaveButtonIsDisabledIfMenuCycleIsPublished(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC31037"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify save button is disabled if menu cycle is published", null, @__tags);
#line 392
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 393
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 394
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 397
    testRunner.Then("Verify save button is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Save button is disabled for locked menu cycle")]
        [NUnit.Framework.CategoryAttribute("TC37810")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "LOCKED MENU CYCLE", "TUESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void SaveButtonIsDisabledForLockedMenuCycle(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC37810"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save button is disabled for locked menu cycle", null, @__tags);
#line 405
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 406
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 407
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 410
    testRunner.Then("Verify save button is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify planning weekly totals equals the sum of all meal period totals")]
        [NUnit.Framework.CategoryAttribute("TC38806")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "AUTOMATION - API Integration Weekly View", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void VerifyPlanningWeeklyTotalsEqualsTheSumOfAllMealPeriodTotals(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC38806"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify planning weekly totals equals the sum of all meal period totals", null, @__tags);
#line 418
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 419
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 420
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 421
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 423
        testRunner.And("Weeks tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
    testRunner.Then("Verify weekly planning totals equals the sum of all meal period totals", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Default values are \'0\' for unplanned meal period")]
        [NUnit.Framework.CategoryAttribute("TC39250")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Automation Testing", "MONDAY", "DINNER", "004Basic Sponge", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void DefaultValuesAre0ForUnplannedMealPeriod(string environment, string withFA, string menuCycle, string day, string mealPeriod, string recipeName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC39250"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Default values are \'0\' for unplanned meal period", null, @__tags);
#line 433
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 434
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 435
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 436
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 438
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "TariffType",
                        "SellPrice",
                        "PlannedQty"});
            table68.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        "RECIPE",
                        string.Format("{0}", recipeName),
                        "TariffOne",
                        "0.00",
                        "0"});
#line 439
    testRunner.Then("Verify data for items is", ((string)(null)), table68, "Then ");
#line 442
        testRunner.And(string.Format("Verify number of covers for meal period \"{0}\" is equal to \"0\"", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Default values are \'0\' when adding new recipe tariff type")]
        [NUnit.Framework.CategoryAttribute("TC39251")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Automation Testing", "MONDAY", "DINNER", "004Basic Sponge", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void DefaultValuesAre0WhenAddingNewRecipeTariffType(string environment, string withFA, string menuCycle, string day, string mealPeriod, string recipeName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC39251"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Default values are \'0\' when adding new recipe tariff type", null, @__tags);
#line 450
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 451
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 452
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 455
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 456
    testRunner.When(string.Format("Add type is clicked for recipe \"{0}\" in meal period \"{1}\"", recipeName, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "TariffType",
                        "SellPrice",
                        "PlannedQty"});
            table69.AddRow(new string[] {
                        string.Format("{0}", mealPeriod),
                        "RECIPE",
                        string.Format("{0}", recipeName),
                        "TariffTwo",
                        "0.00",
                        "0"});
#line 457
    testRunner.Then("Verify data for items is", ((string)(null)), table69, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change week using day-to-day navigation")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Site EUR1", "Post-production MC for AUTOMATION", "WEEK 2", "MON 25 NOV", "SUNDAY - 24 November 2019", "MONDAY - 25 November 2019", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ChangeWeekUsingDay_To_DayNavigation(string environment, string withFA, string location, string menuCycle, string week, string day, string prevDay, string nextDay, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change week using day-to-day navigation", null, exampleTags);
#line 467
   this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 468
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 469
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 472
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
        testRunner.And(string.Format("week \"{0}\" is opened", week), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 475
        testRunner.And("Previous day button is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
    testRunner.Then(string.Format("the screen for \"{0}\" is open", prevDay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 477
    testRunner.Then("Next day button is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 478
    testRunner.Then(string.Format("the screen for \"{0}\" is open", nextDay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Modal dialog for unsaved changes is shown if day-to-day navigation is used")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Site EUR1", "Post-production MC for AUTOMATION", "WEEK 1", "THUR 21 NOV", "MARGRET", "FRIDAY - 22 November 2019", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ModalDialogForUnsavedChangesIsShownIfDay_To_DayNavigationIsUsed(string environment, string withFA, string location, string menuCycle, string week, string day, string mealPeriod, string nextDay, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Modal dialog for unsaved changes is shown if day-to-day navigation is used", null, exampleTags);
#line 486
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 487
 testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 488
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 489
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 490
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 491
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
        testRunner.And(string.Format("week \"{0}\" is opened", week), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 493
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 494
    testRunner.And(string.Format("Number of covers for meal period \"{0}\" is set to random number", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 495
    testRunner.And("Next day button is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 496
    testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
    testRunner.Then(string.Format("the screen for \"{0}\" is open", nextDay), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Button for previous day navigation not visible on first day of MC")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Site EUR1", "Post-production MC for AUTOMATION", "WEEK 1", "THUR 21 NOV", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ButtonForPreviousDayNavigationNotVisibleOnFirstDayOfMC(string environment, string withFA, string location, string menuCycle, string week, string day, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Button for previous day navigation not visible on first day of MC", null, exampleTags);
#line 505
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 506
 testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 507
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
        testRunner.And(string.Format("week \"{0}\" is opened", week), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 513
    testRunner.Then("Verify button for previous day is not visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Button for next day navigation not visible on last day of MC")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Site EUR1", "Post-production MC for AUTOMATION", "WEEK 2", "SAT 30 NOV", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ButtonForNextDayNavigationNotVisibleOnLastDayOfMC(string environment, string withFA, string location, string menuCycle, string week, string day, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Button for next day navigation not visible on last day of MC", null, exampleTags);
#line 521
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 522
 testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 523
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
        testRunner.And(string.Format("week \"{0}\" is opened", week), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 529
    testRunner.Then("Verify button for next day is not visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
