// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycle.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RecipeSearch")]
    [NUnit.Framework.CategoryAttribute("QAI")]
    public partial class RecipeSearchFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RecipeSearch.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RecipeSearch", "    Recipe search functionalities and validations", ProgrammingLanguage.CSharp, new string[] {
                        "QAI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Recipe search by keyword in Meal period")]
        [NUnit.Framework.CategoryAttribute("TC27633")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void RecipeSearchByKeywordInMealPeriod(string environment, string withFA, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC27633",
                    "Smoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recipe search by keyword in Meal period", null, @__tags);
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
        testRunner.And("Menu Cycle \"Meda\" is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
    testRunner.When("Details for meal period \"LUNCH\" in \"MONDAY\" are opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
        testRunner.And("Recipe search is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
        testRunner.And("Recipe \"Fried\" is searched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Type",
                        "Cost"});
            table101.AddRow(new string[] {
                        "724Fried Button Mushrooms",
                        "Recipe",
                        "£1.3078"});
            table101.AddRow(new string[] {
                        "724Fried Eggs",
                        "Recipe",
                        "£0.7291"});
            table101.AddRow(new string[] {
                        "724Fried Onions",
                        "Recipe",
                        "£0.1875"});
            table101.AddRow(new string[] {
                        "724Stir Fried Vegetables",
                        "Recipe",
                        "£0.6052"});
#line 13
        testRunner.And("Verify items present in the search results are", ((string)(null)), table101, "And ");
#line 19
        testRunner.And("Recipe \"Boiled\" is searched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Type",
                        "Cost"});
            table102.AddRow(new string[] {
                        "004Boiled Rice",
                        "Recipe",
                        "£0"});
            table102.AddRow(new string[] {
                        "724Boiled Brown Rice",
                        "Recipe",
                        "£0"});
#line 20
    testRunner.Then("Verify items present in the search results are", ((string)(null)), table102, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Recipe price should be the same for meal period detailed view and the planning sc" +
            "reen")]
        [NUnit.Framework.CategoryAttribute("TC30803")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void RecipePriceShouldBeTheSameForMealPeriodDetailedViewAndThePlanningScreen(string environment, string withFA, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC30803"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recipe price should be the same for meal period detailed view and the planning sc" +
                    "reen", null, @__tags);
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 32
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
        testRunner.And("Menu Cycle \"Meda\" is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
    testRunner.When("Details for meal period \"LUNCH\" in \"MONDAY\" are opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
        testRunner.And("Recipe search is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
        testRunner.And("Recipe \"004Baked Beans_3\" is searched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Type",
                        "Cost"});
            table103.AddRow(new string[] {
                        "004Baked Beans_3",
                        "Recipe",
                        "£1.9157"});
#line 38
        testRunner.And("Verify items present in the search results are", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Type",
                        "Cost"});
            table104.AddRow(new string[] {
                        "004Baked Beans_3",
                        "Recipe",
                        "£1.9157"});
#line 41
        testRunner.And("Verify items in meal period detailed view", ((string)(null)), table104, "And ");
#line 44
        testRunner.And("meal period detailed view is closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
        testRunner.And("planning for \"Monday\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "CostPerUnit"});
            table105.AddRow(new string[] {
                        "LUNCH",
                        "RECIPE",
                        "004Baked Beans_3",
                        "1.92"});
#line 46
    testRunner.Then("Verify data for items is", ((string)(null)), table105, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Single cost is present for Recipe and Ingredients in recipe detailed view")]
        [NUnit.Framework.CategoryAttribute("TC30233")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void SingleCostIsPresentForRecipeAndIngredientsInRecipeDetailedView(string environment, string withFA, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC30233"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Single cost is present for Recipe and Ingredients in recipe detailed view", null, @__tags);
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 57
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
        testRunner.And("Menu Cycle \"Meda\" is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
    testRunner.When("Details for meal period \"LUNCH\" in \"Tuesday\" are opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
        testRunner.And("detailed view for recipe with name \"724Gourmet Chicken Burger\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
    testRunner.Then("Verify meal period recipe name is \"724Gourmet Chicken Burger\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
        testRunner.And("Verify recipe price is \"£0.375\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "IngredientName",
                        "IngredientCost"});
            table106.AddRow(new string[] {
                        "Chicken Breast Diced",
                        "0.00"});
            table106.AddRow(new string[] {
                        "004Fresh White Breadcrumbs (frz) 10g",
                        "0.00"});
            table106.AddRow(new string[] {
                        "ONION FRESH",
                        "0.00"});
            table106.AddRow(new string[] {
                        "Parsley Curley",
                        "0.00"});
            table106.AddRow(new string[] {
                        "Aryzta - Sausage Roll",
                        "0.00"});
            table106.AddRow(new string[] {
                        "Lea & Perrins - Worcestershire Sauce",
                        "0.00"});
            table106.AddRow(new string[] {
                        "EGGS WHOLE PASTEURISED",
                        "0.38"});
#line 64
        testRunner.And("Verify ingredients in the detailed view", ((string)(null)), table106, "And ");
#line 73
        testRunner.And("Verify ingredients total cost is \"0.38\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
