// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MenuCycle.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MealPeriods")]
    public partial class MealPeriodsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MealPeriods.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MealPeriods", "\tMeal Periods functionalities and validations", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Open daily planning with one meal period")]
        [NUnit.Framework.CategoryAttribute("TC28547")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "LUNCH", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void OpenDailyPlanningWithOneMealPeriod(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28547"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open daily planning with one meal period", null, @__tags);
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
    testRunner.Then(string.Format("Verify main data for Meal Period \"{0}\" is expanded", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Open daily planning with multiple meal period")]
        [NUnit.Framework.CategoryAttribute("TC27663")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DINNER", "TUESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void OpenDailyPlanningWithMultipleMealPeriod(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC27663"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open daily planning with multiple meal period", null, @__tags);
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
    testRunner.Then(string.Format("Verify main data for Meal Period \"{0}\" is collapsed", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Collapse single meal period")]
        [NUnit.Framework.CategoryAttribute("TC28549")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "LUNCH", "MONDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void CollapseSingleMealPeriod(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28549"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Collapse single meal period", null, @__tags);
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 46
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
        testRunner.And(string.Format("Meal Period \"{0}\" is collapsed", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
    testRunner.Then(string.Format("Verify main data for Meal Period \"{0}\" is collapsed", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Expand single meal period")]
        [NUnit.Framework.CategoryAttribute("TC28548")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "LUNCH", "TUESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ExpandSingleMealPeriod(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28548"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expand single meal period", null, @__tags);
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 60
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
        testRunner.And(string.Format("Meal Period \"{0}\" is expanded", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
    testRunner.Then(string.Format("Verify main data for Meal Period \"{0}\" is expanded", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The colour of every meal period in the Planning screen is the same as in the cale" +
            "ndar page")]
        [NUnit.Framework.CategoryAttribute("TC28546")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "TUESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void TheColourOfEveryMealPeriodInThePlanningScreenIsTheSameAsInTheCalendarPage(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28546"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The colour of every meal period in the Planning screen is the same as in the cale" +
                    "ndar page", null, @__tags);
#line 73
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 74
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
        testRunner.And(string.Format("Meal Period colours for \"{0}\" are saved", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
    testRunner.Then("Verify Meal Period colours match the calendar view colours", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Display recipes, added to a meal period in the planning screen")]
        [NUnit.Framework.CategoryAttribute("TC28800")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "LUNCH", "TUESDAY", "724Gourmet Beef Burger 6oz", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void DisplayRecipesAddedToAMealPeriodInThePlanningScreen(string environment, string withFA, string menuCycle, string mealPeriod, string day, string recipe, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28800"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Display recipes, added to a meal period in the planning screen", null, @__tags);
#line 87
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 88
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
        testRunner.And(string.Format("Meal Period \"{0}\" is expanded", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
    testRunner.Then(string.Format("Verify recipe named \"{0}\" is present for meal period \"{1}\"", recipe, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
        testRunner.And(string.Format("Verify recipe colour for \"{0}\" match the colour for meal period \"{1}\"", recipe, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Display Buffet menus, added to a meal period in the planning screen")]
        [NUnit.Framework.CategoryAttribute("TC28801")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DANGELO", "TUESDAY", "Aneliya Buffet", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void DisplayBuffetMenusAddedToAMealPeriodInThePlanningScreen(string environment, string withFA, string menuCycle, string mealPeriod, string day, string buffet, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28801"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Display Buffet menus, added to a meal period in the planning screen", null, @__tags);
#line 102
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 103
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
        testRunner.And(string.Format("Meal Period \"{0}\" is expanded", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.Then(string.Format("Verify buffet named \"{0}\" is present for meal period \"{1}\"", buffet, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
        testRunner.And(string.Format("Verify buffet colour for \"{0}\" match the colour for meal period \"{1}\"", buffet, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
        testRunner.And(string.Format("Verify in meal period \"{0}\" all recipe colours inside \"{1}\" match the buffet colo" +
                        "ur", mealPeriod, buffet), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Display A la carte menus, added to a meal period in the planning screen")]
        [NUnit.Framework.CategoryAttribute("TC28802")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "LANCE", "Wednesday", "Holiday A La Carte", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void DisplayALaCarteMenusAddedToAMealPeriodInThePlanningScreen(string environment, string withFA, string menuCycle, string mealPeriod, string day, string aLaCarte, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28802"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Display A la carte menus, added to a meal period in the planning screen", null, @__tags);
#line 118
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 119
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
    testRunner.Then(string.Format("Verify a la carte named \"{0}\" is present for meal period \"{1}\"", aLaCarte, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 124
        testRunner.And(string.Format("Verify a la carte colour for \"{0}\" match the colour for meal period \"{1}\"", aLaCarte, mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
        testRunner.And(string.Format("Verify in meal period \"{0}\" all recipe colours inside \"{1}\" match the A La Carte " +
                        "colour", mealPeriod, aLaCarte), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Retrieve Number of covers for meal period from the API")]
        [NUnit.Framework.CategoryAttribute("TC28897")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DANGELO", "Thursday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void RetrieveNumberOfCoversForMealPeriodFromTheAPI(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC28897"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Retrieve Number of covers for meal period from the API", null, @__tags);
#line 133
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 134
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
    testRunner.Then(string.Format("Verify number of covers for meal period \"{0}\" is equal to \"3\"", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Open all meal periods in Planning screen")]
        [NUnit.Framework.CategoryAttribute("TC27660")]
        [NUnit.Framework.CategoryAttribute("TC27662")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "TUESDAY", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void OpenAllMealPeriodsInPlanningScreen(string environment, string withFA, string menuCycle, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC27660",
                    "TC27662"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open all meal periods in Planning screen", null, @__tags);
#line 146
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 147
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
    testRunner.And("Verify all meal periods are expanded in Daily Planning", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
        testRunner.And("Collapse all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
    testRunner.Then("Verify all meal periods are collapsed in Daily Planning", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Recipes only - Calculate Meal period \"Planned Quantity\", \"Total Cost\", \"Revenue\" " +
            "and \"ActualGP\"")]
        [NUnit.Framework.CategoryAttribute("TC29384")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DANGELO", "Thursday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void RecipesOnly_CalculateMealPeriodPlannedQuantityTotalCostRevenueAndActualGP(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29384"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Recipes only - Calculate Meal period \"Planned Quantity\", \"Total Cost\", \"Revenue\" " +
                    "and \"ActualGP\"", null, @__tags);
#line 162
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 163
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 164
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "PlannedQuantity",
                        "PriceModel",
                        "Target",
                        "TaxPercentage",
                        "SellPrice"});
            table26.AddRow(new string[] {
                        "DANGELO",
                        "RECIPE",
                        "703Coronation Chicken Sandwich Filling (50g)",
                        "10",
                        "GP",
                        "14",
                        "20",
                        "^"});
            table26.AddRow(new string[] {
                        "DANGELO",
                        "RECIPE",
                        "703Reggae Raggae Mayonnaise",
                        "10",
                        "Fixed",
                        "^",
                        "20",
                        "1"});
#line 167
    testRunner.And("data for recipes is set", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlannedQty",
                        "TotalCost",
                        "Revenue",
                        "ActualGP"});
            table27.AddRow(new string[] {
                        "20",
                        "18.00",
                        "17.64",
                        "-2%"});
#line 171
    testRunner.Then(string.Format("Verify value for fields for meal period \"{0}\" is", mealPeriod), ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Buffets only - Calculate Meal period \"Planned Quantity\", \"Total Cost\", \"Revenue\" " +
            "and \"ActualGP\"")]
        [NUnit.Framework.CategoryAttribute("TC29387")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DANGELO", "Friday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void BuffetsOnly_CalculateMealPeriodPlannedQuantityTotalCostRevenueAndActualGP(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29387"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buffets only - Calculate Meal period \"Planned Quantity\", \"Total Cost\", \"Revenue\" " +
                    "and \"ActualGP\"", null, @__tags);
#line 181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 182
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 183
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "PlannedQuantity",
                        "TariffType",
                        "PriceModel",
                        "TaxPercentage",
                        "SellPrice"});
            table28.AddRow(new string[] {
                        "DANGELO",
                        "BUFFET",
                        "Maya Buffet",
                        "10",
                        "TariffOne",
                        "Fixed",
                        "20",
                        "23"});
#line 186
    testRunner.And("data for buffets is set", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "RecipeTitle",
                        "PlannedQuantity"});
            table29.AddRow(new string[] {
                        "004Basic Sponge",
                        "10"});
            table29.AddRow(new string[] {
                        "004Fresh Lemon Curd",
                        "20"});
            table29.AddRow(new string[] {
                        "004Fish Stock (bouillon)",
                        "30"});
            table29.AddRow(new string[] {
                        "004Beef Stock (bouillon)",
                        "40"});
            table29.AddRow(new string[] {
                        "724Custard Sauce (powder, fresh milk)",
                        "50"});
            table29.AddRow(new string[] {
                        "004German Shortcrust Pastry (fresh)007",
                        "60"});
#line 189
    testRunner.And("data for recipes in buffet \"Maya Buffet\" in meal period \"DANGELO\" is set", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlannedQty",
                        "TotalCost",
                        "Revenue",
                        "ActualGP"});
            table30.AddRow(new string[] {
                        "407",
                        "1165.63",
                        "191.67",
                        "-508%"});
#line 197
    testRunner.Then("Verify value for fields for meal period \"DANGELO\" is", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A la cartes only - Calculate Meal period \"Planned Quantity\", \"Total Cost\", \"Reven" +
            "ue\" and \"ActualGP\"")]
        [NUnit.Framework.CategoryAttribute("TC29388")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DANGELO", "Friday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ALaCartesOnly_CalculateMealPeriodPlannedQuantityTotalCostRevenueAndActualGP(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29388"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A la cartes only - Calculate Meal period \"Planned Quantity\", \"Total Cost\", \"Reven" +
                    "ue\" and \"ActualGP\"", null, @__tags);
#line 207
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 208
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 209
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "RecipeTitle",
                        "PlannedQuantity",
                        "PriceModel",
                        "Target",
                        "TaxPercentage",
                        "SellPrice"});
            table31.AddRow(new string[] {
                        "004Bread (fresh dough)",
                        "2",
                        "GP",
                        "11",
                        "20",
                        "^"});
            table31.AddRow(new string[] {
                        "724Pepper & Garlic Coated Beef",
                        "3",
                        "Fixed",
                        "^",
                        "20",
                        "55"});
#line 212
    testRunner.And("data for recipes in a la carte \"Holiday A La Carte\" in meal period \"DANGELO\" is s" +
                    "et", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlannedQty",
                        "TotalCost",
                        "Revenue",
                        "ActualGP"});
            table32.AddRow(new string[] {
                        "253",
                        "16326.68",
                        "137.62",
                        "-11764%"});
#line 216
    testRunner.Then("Verify value for fields for meal period \"DANGELO\" is", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Combined for Buffet, A la cares and recipes - Calculate Meal period \"Planned Quan" +
            "tity\", \"Total Cost\", \"Revenue\" and \"ActualGP\"")]
        [NUnit.Framework.CategoryAttribute("TC29391")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DANGELO", "Friday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void CombinedForBuffetALaCaresAndRecipes_CalculateMealPeriodPlannedQuantityTotalCostRevenueAndActualGP(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29391"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Combined for Buffet, A la cares and recipes - Calculate Meal period \"Planned Quan" +
                    "tity\", \"Total Cost\", \"Revenue\" and \"ActualGP\"", null, @__tags);
#line 226
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 227
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 228
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "RecipeTitle",
                        "PlannedQuantity",
                        "PriceModel",
                        "Target",
                        "TaxPercentage",
                        "SellPrice"});
            table33.AddRow(new string[] {
                        "004Bread (fresh dough)",
                        "2",
                        "GP",
                        "11",
                        "20",
                        "^"});
            table33.AddRow(new string[] {
                        "724Pepper & Garlic Coated Beef",
                        "3",
                        "Fixed",
                        "^",
                        "20",
                        "55"});
#line 231
    testRunner.And("data for recipes in a la carte \"Holiday A La Carte\" in meal period \"DANGELO\" is s" +
                    "et", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "PlannedQuantity",
                        "TariffType",
                        "PriceModel",
                        "TaxPercentage",
                        "SellPrice"});
            table34.AddRow(new string[] {
                        "DANGELO",
                        "BUFFET",
                        "Maya Buffet",
                        "10",
                        "TariffOne",
                        "Fixed",
                        "20",
                        "23"});
#line 235
    testRunner.And("data for buffets is set", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "RecipeTitle",
                        "PlannedQuantity"});
            table35.AddRow(new string[] {
                        "004Basic Sponge",
                        "10"});
            table35.AddRow(new string[] {
                        "004Fresh Lemon Curd",
                        "20"});
            table35.AddRow(new string[] {
                        "004Fish Stock (bouillon)",
                        "30"});
            table35.AddRow(new string[] {
                        "004Beef Stock (bouillon)",
                        "40"});
            table35.AddRow(new string[] {
                        "724Custard Sauce (powder, fresh milk)",
                        "50"});
            table35.AddRow(new string[] {
                        "004German Shortcrust Pastry (fresh)007",
                        "60"});
#line 238
    testRunner.And("data for recipes in buffet \"Maya Buffet\" in meal period \"DANGELO\" is set", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "MealPeriodName",
                        "TYPE",
                        "RecipeTitle",
                        "PlannedQuantity",
                        "PriceModel",
                        "Target",
                        "TaxPercentage",
                        "SellPrice"});
            table36.AddRow(new string[] {
                        "DANGELO",
                        "RECIPE",
                        "004Bechamel Sauce",
                        "10",
                        "GP",
                        "14",
                        "20",
                        "^"});
            table36.AddRow(new string[] {
                        "DANGELO",
                        "RECIPE",
                        "004Baked Beans_3",
                        "10",
                        "Fixed",
                        "^",
                        "20",
                        "1"});
#line 246
    testRunner.And("data for recipes is set", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlannedQty",
                        "TotalCost",
                        "Revenue",
                        "ActualGP"});
            table37.AddRow(new string[] {
                        "432",
                        "16882.22",
                        "339.59",
                        "-4871%"});
#line 250
    testRunner.Then("Verify value for fields for meal period \"DANGELO\" is", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are collapsed after reopening planning screen")]
        [NUnit.Framework.CategoryAttribute("TC29560")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "DANGELO", "Tuesday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreCollapsedAfterReopeningPlanningScreen(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC29560"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are collapsed after reopening planning screen", null, @__tags);
#line 260
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 261
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 262
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 265
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
    testRunner.And("Verify all meal periods are expanded in Daily Planning", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
        testRunner.And("Cancel button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
        testRunner.And(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
    testRunner.Then("Verify all meal periods are collapsed in Daily Planning", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("More than one hundred recipies are shown in a meal period")]
        [NUnit.Framework.CategoryAttribute("TC30011")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Testing Copying Meal Periods", "LUNCH", "Wednesday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MoreThanOneHundredRecipiesAreShownInAMealPeriod(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC30011"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("More than one hundred recipies are shown in a meal period", null, @__tags);
#line 277
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 278
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 279
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
    testRunner.Then(string.Format("Verify \"132\" recipies are present in meal period \"{0}\"", mealPeriod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The order of meal periods from the planning screen is the same as in the calendar" +
            " view")]
        [NUnit.Framework.CategoryAttribute("TC30087")]
        [NUnit.Framework.CategoryAttribute("D24839")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "LUNCH", "Tuesday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void TheOrderOfMealPeriodsFromThePlanningScreenIsTheSameAsInTheCalendarView(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC30087",
                    "D24839"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The order of meal periods from the planning screen is the same as in the calendar" +
                    " view", null, @__tags);
#line 290
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 291
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 292
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
        testRunner.And(string.Format("Meal Period names for \"{0}\" are saved", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
    testRunner.Then("Verify Meal Period names match the calendar view names", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Expand all meal periods in the Calendar view")]
        [NUnit.Framework.CategoryAttribute("TC31018")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", "LUNCH", "Tuesday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ExpandAllMealPeriodsInTheCalendarView(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC31018"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expand all meal periods in the Calendar view", null, @__tags);
#line 304
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 305
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 306
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
    testRunner.When("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 309
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
    testRunner.Then("Verify all meal periods are expanded in Daily Calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Collapse all meal periods in the Calendar view")]
        [NUnit.Framework.CategoryAttribute("TC31019")]
        [NUnit.Framework.CategoryAttribute("D27173")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void CollapseAllMealPeriodsInTheCalendarView(string environment, string withFA, string menuCycle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC31019",
                    "D27173"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Collapse all meal periods in the Calendar view", null, @__tags);
#line 318
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 319
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 320
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
    testRunner.When("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
        testRunner.And("Verify all meal periods are expanded in Daily Calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
        testRunner.And("Collapse all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
    testRunner.Then("Verify all meal periods are collapsed in Daily Calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("All meal periods in Calendar view are collapsed by default")]
        [NUnit.Framework.CategoryAttribute("TC31021")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Meda", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void AllMealPeriodsInCalendarViewAreCollapsedByDefault(string environment, string withFA, string menuCycle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC31021"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("All meal periods in Calendar view are collapsed by default", null, @__tags);
#line 334
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 335
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 336
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
    testRunner.When("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 339
    testRunner.Then("Verify all meal periods are collapsed in Daily Calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Deleting meal period deletes it from calendar view")]
        [NUnit.Framework.CategoryAttribute("TC31191")]
        [NUnit.Framework.CategoryAttribute("D21720")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Automation Testing", "LUNCH", "Monday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void DeletingMealPeriodDeletesItFromCalendarView(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC31191",
                    "D21720"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deleting meal period deletes it from calendar view", null, @__tags);
#line 347
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 348
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 349
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
    testRunner.When("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
        testRunner.And(string.Format("Meal period \"{0}\" is created for \"{1}\"", mealPeriod, day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
        testRunner.And("Recipe search is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
        testRunner.And("Buffet \"Maya Buffet\" is searched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
        testRunner.And("Buffet \"Maya Buffet\" is added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
        testRunner.And("Meal period is saved with notification \"Meal Period Saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
    testRunner.When("Meal period delete button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 358
        testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
        testRunner.And("Verify notification message \"Meal Period Deleted Successfully.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
    testRunner.Then(string.Format("Verify Meal period \"{0}\" is not present for \"{1}\"", mealPeriod, day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Clicking on the \"NEW MEAL PERIOD\" box while selecting a meal period should not di" +
            "sable the \"Select meal period\" drop-down")]
        [NUnit.Framework.CategoryAttribute("TC31310")]
        [NUnit.Framework.CategoryAttribute("D21324")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Automation Testing", "LUNCH", "Monday", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ClickingOnTheNEWMEALPERIODBoxWhileSelectingAMealPeriodShouldNotDisableTheSelectMealPeriodDrop_Down(string environment, string withFA, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC31310",
                    "D21324"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Clicking on the \"NEW MEAL PERIOD\" box while selecting a meal period should not di" +
                    "sable the \"Select meal period\" drop-down", null, @__tags);
#line 368
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 369
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 370
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 372
    testRunner.When(string.Format("New meal period button is clicked for \"{0}\"", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 373
    testRunner.Then("Verify new meal period header is not clickable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No modal dialog is displayed after trying to add an existing recipe")]
        [NUnit.Framework.CategoryAttribute("TC39578")]
        [NUnit.Framework.CategoryAttribute("D35594")]
        [NUnit.Framework.TestCaseAttribute("QAI_2", "false", "Automation Testing", "LUNCH", "Monday", "004Baked Beans_0", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void NoModalDialogIsDisplayedAfterTryingToAddAnExistingRecipe(string environment, string withFA, string menuCycle, string mealPeriod, string day, string recipeName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC39578",
                    "D35594"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No modal dialog is displayed after trying to add an existing recipe", null, @__tags);
#line 381
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 382
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 383
        testRunner.And("a nouser user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 384
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
    testRunner.When("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 386
        testRunner.And(string.Format("Meal period \"{0}\" is created for \"{1}\"", mealPeriod, day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
        testRunner.And("Recipe search is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
        testRunner.And(string.Format("Recipe \"{0}\" is searched", recipeName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
        testRunner.And(string.Format("Recipe \"{0}\" is added", recipeName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
        testRunner.And("Meal period is saved with notification \"Meal Period Saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
        testRunner.And(string.Format("Recipe \"{0}\" is added", recipeName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
        testRunner.And("Verify notification message \"Item already added\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
    testRunner.Then("meal period detailed view is closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 394
        testRunner.And(string.Format("Details for meal period \"{0}\" in \"{1}\" are opened", mealPeriod, day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
        testRunner.And("Meal period delete button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
        testRunner.And("Modal dialog Yes is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
        testRunner.And("Verify notification message \"Meal Period Deleted Successfully.\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
        testRunner.And(string.Format("Verify Meal period \"{0}\" is not present for \"{1}\"", mealPeriod, day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Expand all meal periods in the Calendar view for Central after Expanding them for" +
            " Local")]
        [NUnit.Framework.CategoryAttribute("D37179")]
        [NUnit.Framework.CategoryAttribute("TC40337")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Site EUR1", "Local User Testing", "Meda", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void ExpandAllMealPeriodsInTheCalendarViewForCentralAfterExpandingThemForLocal(string environment, string withFA, string location, string menuCycle, string menuCycle1, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "D37179",
                    "TC40337"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expand all meal periods in the Calendar view for Central after Expanding them for" +
                    " Local", null, @__tags);
#line 406
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 407
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 408
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
    testRunner.When("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 412
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
        testRunner.And("Verify all meal periods are expanded in Daily Calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
        testRunner.And("Home button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
        testRunner.And("Location name is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 418
        testRunner.And("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
    testRunner.Then("Verify all meal periods are expanded in Daily Calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify there are no duplicate items in meal period in the calendar view")]
        [NUnit.Framework.CategoryAttribute("TC40349")]
        [NUnit.Framework.CategoryAttribute("D37177")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Site EUR1", "FOR Local User AUTOMATION", "LUNCH", "WED 14 AUG", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void VerifyThereAreNoDuplicateItemsInMealPeriodInTheCalendarView(string environment, string withFA, string location, string menuCycle, string mealPeriod, string day, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40349",
                    "D37177"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify there are no duplicate items in meal period in the calendar view", null, @__tags);
#line 428
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 429
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 430
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 433
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
        testRunner.And("week \"WEEK 3\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
    testRunner.When("Verify calendar view is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 436
        testRunner.And("Expand all is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
        testRunner.And("Verify all meal periods are expanded in Daily Calendar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
    testRunner.Then(string.Format("Verify there are no duplicated items in meal period \"{0}\" for day \"{1}\" in the ca" +
                        "lendar view", mealPeriod, day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in daily calendar")]
        [NUnit.Framework.CategoryAttribute("TC40440")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Menu Cycle", "MONDAY", "BRUNCH,AFTERNOON TEA,DINNER,DANGELO,JAQUELINE,CYRIL", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInDailyCalendar(string environment, string withFA, string menuCycle, string day, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40440"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in daily calendar", null, @__tags);
#line 447
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 448
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 449
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table38.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 451
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" in daily calendar are:", day), ((string)(null)), table38, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in weekly calendar")]
        [NUnit.Framework.CategoryAttribute("TC40449")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Menu Cycle", "MONDAY", "WEEK 1", "Brunch,Afternoon Tea,Dinner,Dangelo,Jaqueline,Cyril", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInWeeklyCalendar(string environment, string withFA, string menuCycle, string day, string week, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40449"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in weekly calendar", null, @__tags);
#line 461
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 462
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 463
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
    testRunner.When(string.Format("week \"{0}\" is expanded", week), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table39.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 467
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" week \"{1}\" in weekly calendar are:", day, week), ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in planning screen daily")]
        [NUnit.Framework.CategoryAttribute("TC40439")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Menu Cycle", "MONDAY", "BRUNCH,AFTERNOON TEA,DINNER,DANGELO,JAQUELINE,CYRIL", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInPlanningScreenDaily(string environment, string withFA, string menuCycle, string day, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40439"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in planning screen daily", null, @__tags);
#line 477
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 478
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 479
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 480
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 481
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table40.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 482
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" in planning screen daily are:", day), ((string)(null)), table40, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in planning screen weekly")]
        [NUnit.Framework.CategoryAttribute("TC40450")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Menu Cycle", "MONDAY", "WEEK 1", "Brunch,Afternoon Tea,Dinner,Dangelo,Jaqueline,Cyril", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInPlanningScreenWeekly(string environment, string withFA, string menuCycle, string day, string week, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40450"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in planning screen weekly", null, @__tags);
#line 492
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 493
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 494
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 495
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 496
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 497
        testRunner.And("Weeks tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table41.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 498
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" week \"{1}\" in planning screen weekly are:", day, week), ((string)(null)), table41, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in nutrition screen daily")]
        [NUnit.Framework.CategoryAttribute("TC40480")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Menu Cycle", "MONDAY", "BRUNCH,AFTERNOON TEA,DINNER,DANGELO,JAQUELINE,CYRIL", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInNutritionScreenDaily(string environment, string withFA, string menuCycle, string day, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40480"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in nutrition screen daily", null, @__tags);
#line 508
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 509
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 510
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 513
        testRunner.And("nutrition tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table42.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 514
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" in nutrition screen daily are:", day), ((string)(null)), table42, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in nutrition screen weekly")]
        [NUnit.Framework.CategoryAttribute("TC40451")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Menu Cycle", "MONDAY", "WEEK 1", "Brunch,Afternoon Tea,Dinner,Dangelo,Jaqueline,Cyril", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInNutritionScreenWeekly(string environment, string withFA, string menuCycle, string day, string week, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40451"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in nutrition screen weekly", null, @__tags);
#line 524
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 525
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 526
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 527
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 529
        testRunner.And("nutrition tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 530
        testRunner.And("Weeks tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table43.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 531
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" week \"{1}\" in nutrition screen weekly are:", day, week), ((string)(null)), table43, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in post-production daily")]
        [NUnit.Framework.CategoryAttribute("TC40599")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation post-prod", "Site EUR1", "WED 10 JUL", "BREAKFAST,LUNCH,AFTERNOON TEA,DINNER,RYLEY,CARMINE,JAQUELINE,ALL DAY,ALL DAY 2", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInPost_ProductionDaily(string environment, string withFA, string menuCycle, string location, string day, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40599"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in post-production daily", null, @__tags);
#line 541
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 542
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 543
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 544
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 545
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 546
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 547
        testRunner.And("week \"WEEK 1\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 548
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 549
        testRunner.And("post-production tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table44.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 550
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" week \"<week>\" in nutrition screen daily are:", day), ((string)(null)), table44, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order in post-production weekly")]
        [NUnit.Framework.CategoryAttribute("TC40598")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation post-prod", "Site EUR1", "WED 10 JUL", "WEDNESDAY", "WEEK 1", "Breakfast,Lunch,Afternoon Tea,Dinner,Ryley,Carmine,Jaqueline,All day,All day 2", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderInPost_ProductionWeekly(string environment, string withFA, string menuCycle, string location, string day, string weekDay, string week, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40598"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order in post-production weekly", null, @__tags);
#line 560
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 561
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 562
        testRunner.And("a local user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 563
        testRunner.And(string.Format("location \"{0}\" is selected", location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 564
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 565
        testRunner.And("Weekly Calendar is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 566
        testRunner.And("week \"WEEK 1\" is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 567
    testRunner.When(string.Format("planning for \"{0}\" is opened", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 568
        testRunner.And("post-production tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 569
        testRunner.And("Weeks tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table45.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 570
    testRunner.Then(string.Format("Verify meal periods for day \"{0}\" week \"{1}\" in nutrition screen weekly are:", weekDay, week), ((string)(null)), table45, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Meal periods are displayed in the correct sort order on Add/Delete meal period")]
        [NUnit.Framework.CategoryAttribute("TC40448")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Menu Cycle", "TUESDAY", "BREAKFAST,BRUNCH,LUNCH,AFTERNOON TEA,DINNER,MIDNIGHT FEAST,TISHTESTPERIOD1,TEST M" +
            "EALPERIOD,CHLOE,DANGELO,MARGRET,RYLEY,CARMINE,JAQUELINE,JAYDA,ELIJAH,ALENA,LANCE" +
            ",CYRIL,ADRIEN,ALL DAY,ALL DAY 2", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void MealPeriodsAreDisplayedInTheCorrectSortOrderOnAddDeleteMealPeriod(string environment, string withFA, string menuCycle, string day, string mealPeriods, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC40448"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Meal periods are displayed in the correct sort order on Add/Delete meal period", null, @__tags);
#line 580
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 581
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 582
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 583
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 584
    testRunner.When(string.Format("New meal period button is clicked for \"{0}\"", day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 585
        testRunner.And("meal period dropdown is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "mealPeriods"});
            table46.AddRow(new string[] {
                        string.Format("{0}", mealPeriods)});
#line 586
    testRunner.Then("Verify meal periods in the meal period dropdown are:", ((string)(null)), table46, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Can not add existing meal period")]
        [NUnit.Framework.CategoryAttribute("TC41079")]
        [NUnit.Framework.CategoryAttribute("D37940")]
        [NUnit.Framework.TestCaseAttribute("QAI", "false", "Automation Testing", "TUESDAY", "LUNCH", new string[] {
                "QAI"}, Category="QAI")]
        public virtual void CanNotAddExistingMealPeriod(string environment, string withFA, string menuCycle, string day, string mealPeriod, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC41079",
                    "D37940"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Can not add existing meal period", null, @__tags);
#line 597
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 598
    testRunner.Given(string.Format("Menu Cycles app is open on \"{0}\" with FourthApp \"{1}\"", environment, withFA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 599
        testRunner.And("a central user is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 600
        testRunner.And(string.Format("Menu Cycle \"{0}\" is selected", menuCycle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 601
    testRunner.When(string.Format("Meal period \"{0}\" is created for \"{1}\"", mealPeriod, day), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 602
    testRunner.Then("Verify notification message \"This meal period already exists in this day.\" is dis" +
                    "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
